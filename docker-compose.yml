version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://backend:8000
      - REACT_APP_WS_URL=ws://backend:8000/ws
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    networks:
      - luna-network

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://luna_user:luna_password@postgres:5432/luna_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-jwt-secret-here
      - GITHUB_CLIENT_ID=your-github-client-id
      - GITHUB_CLIENT_SECRET=your-github-client-secret
      - SLACK_WEBHOOK_URL=your-slack-webhook-url
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - luna-network

  # Celery Worker Service
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://luna_user:luna_password@postgres:5432/luna_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-jwt-secret-here
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - luna-network

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://luna_user:luna_password@postgres:5432/luna_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-jwt-secret-here
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - luna-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=luna_db
      - POSTGRES_USER=luna_user
      - POSTGRES_PASSWORD=luna_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - luna-network

  # Redis for Caching and Task Queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - luna-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - luna-network

  # Documentation Service (MkDocs)
  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile
    ports:
      - "8080:8000"
    volumes:
      - ./docs:/docs
    networks:
      - luna-network

volumes:
  postgres_data:
  redis_data:

networks:
  luna-network:
    driver: bridge