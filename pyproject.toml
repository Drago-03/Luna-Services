[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "luna-services-mcp"
version = "2.1.0"
description = "Luna Services Universal Model Context Protocol System - AI-Powered Development Assistant"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Luna Services Team", email = "support@luna-services.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "google-generativeai>=0.3.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-google-genai>=0.0.8",
    "chromadb>=0.4.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "httpx>=0.25.0",
    "structlog>=23.2.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "naptha-automcp>=0.1.0",
    "pillow>=11.3.0",
]

[project.optional-dependencies]
voice = [
    "grpcio>=1.59.0",
    "grpcio-tools>=1.59.0",
    "protobuf>=4.25.0",
    "pyaudio>=0.2.11"
]
ml = [
    "torch>=2.1.0",
    "transformers>=4.35.0",
    "sentence-transformers>=2.2.0"
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.10.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0"
]

[project.scripts]
serve_stdio = "run_mcp:serve_stdio"
serve_sse = "run_mcp:serve_sse"

[project.urls]
Homepage = "https://github.com/Drago-03/Luna-Services"
Documentation = "https://github.com/Drago-03/Luna-Services/docs"
Repository = "https://github.com/Drago-03/Luna-Services"
"Bug Tracker" = "https://github.com/Drago-03/Luna-Services/issues"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
include = [
    "run_mcp.py",
    "backend/",
    "docs/",
    ".env.example"
]
exclude = [
    "__pycache__",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".pytest_cache",
    ".mypy_cache",
    "node_modules/",
    "frontend/",
    "src/",
    "public/",
    ".git/"
]
sources = ["."]
packages = ["."]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | node_modules
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend", "app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "google.generativeai.*",
    "langchain.*",
    "chromadb.*",
    "grpc.*",
    "transformers.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
asyncio_mode = "auto"
